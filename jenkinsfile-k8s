pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: kaniko
                image: gcr.io/kaniko-project/executor:v1.6.0-debug
                imagePullPolicy: Always
                command:
                - sleep
                args:
                - 99d
                volumeMounts:
                  - name: jenkins-docker-cfg
                    mountPath: /kaniko/.docker
              volumes:
              - name: jenkins-docker-cfg
                projected:
                  sources:
                  - secret:
                      name: regcred
                      items:
                        - key: .dockerconfigjson
                          path: config.json                 
            """
        }
    }
    environment {
        HARBOR_URL = 'harborlab.citigo.net'
        HARBOR_PROJECT = 'jenkins'
        IMAGE_NAME = 'nginx-app-k8s'
        DOCKER_CREDENTIALS_ID = 'harbor_id'
    }
    stages {
        stage('version') {
            steps {
                sh 'ls -la'
                sh 'whoami'
            }
        }
        stage('Build Docker Image with Kaniko ') {
            steps {
                container('kaniko') {
                     sh '/kaniko/executor -f `pwd`/Dockerfile -c `pwd` --insecure --skip-tls-verify --cache=true --destination "${HARBOR_URL}/${HARBOR_PROJECT}/${IMAGE_NAME}:${BUILD_NUMBER}"'
                    }
                }
            }
        }
        stage('Push to Harbor') {
            steps {
                container('docker') {
                        script {
                            docker.withRegistry("https://${HARBOR_URL}", "${DOCKER_CREDENTIALS_ID}") {
                                dockerImage.push()
                        }
                    }
                }
            }
        }
    }
}
